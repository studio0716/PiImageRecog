#!/usr/bin/env python3
"""Explore options for models with more object classes"""

print("=== Model Options for More Object Classes ===\n")

print("1. CURRENT OPTIONS (Already on your Pi):")
print("   - YOLOv8s: 80 COCO classes (currently using)")
print("   - YOLOv8m: 80 COCO classes (better accuracy, ~17 FPS)")
print("   - YOLOv11s: 80 COCO classes (newer architecture)")
print("   - YOLOv11n: 80 COCO classes (faster but less accurate)")
print()

print("2. DATASETS WITH MORE CLASSES:")
print()
print("   Objects365 Dataset:")
print("   - 365 object categories (4.5x more than COCO)")
print("   - Includes more specific items like:")
print("     • Food items: hamburger, french fries, hot dog, pizza slice")
print("     • Electronics: printer, scanner, router, game controller") 
print("     • Furniture: wardrobe, nightstand, desk lamp")
print("     • Clothing: hat, scarf, gloves, boots")
print("     • Tools: hammer, screwdriver, wrench")
print("   - Better for retail, household, and general detection")
print()

print("   OpenImages V7 Dataset:")
print("   - 600+ object classes")
print("   - Even more comprehensive than Objects365")
print("   - Includes very specific categories")
print()

print("3. HOW TO GET MORE CLASSES:")
print()
print("   Option A: Download Pre-trained Model")
print("   ```bash")
print("   # Download YOLOv8 trained on Objects365")
print("   wget https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-oiv7.pt")
print("   ```")
print()
print("   Option B: Convert for Hailo")
print("   1. Export to ONNX:")
print("      ```python")
print("      from ultralytics import YOLO")
print("      model = YOLO('yolov8x-oiv7.pt')")
print("      model.export(format='onnx', imgsz=640)")
print("      ```")
print()
print("   2. Use Hailo Model Zoo to compile:")
print("      ```bash")
print("      hailomz compile --ckpt yolov8x-oiv7.onnx \\")
print("          --calib-path /path/to/calibration/images/ \\")
print("          --yaml path/to/yolov8.yaml \\")
print("          --classes 365")
print("      ```")
print()

print("4. SPECIALIZED MODELS:")
print("   - Fashion detection (clothing items)")
print("   - Food detection (menu items, ingredients)")
print("   - Retail detection (products, packages)")
print("   - Medical detection (equipment, anatomy)")
print("   - Industrial detection (parts, defects)")
print()

print("5. RECOMMENDATION:")
print("   For immediate improvement with same 80 classes:")
print("   - Use YOLOv8m (already deployed)")
print("   ")
print("   For many more classes:")
print("   - Objects365 is the best balance of classes and performance")
print("   - Requires downloading model and converting to HEF format")
print()

# Create a simple class list comparison
print("SAMPLE CLASS COMPARISON:")
print()
print("COCO (80 classes) includes:")
print("person, car, dog, chair, tv, laptop, cell phone...")
print()
print("Objects365 (365 classes) adds:")
print("hamburger, printer, pillow, towel, sock, ring, bracelet,")
print("wallet, umbrella, helmet, gloves, scarf, tie, suitcase,") 
print("drum, guitar, violin, game controller, and 250+ more!")

# Instructions for trying different models
print("\n\nTO TRY DIFFERENT MODELS:")
print("1. YOLOv8m: Already active at http://kcvm.local:8080")
print("2. YOLOv11s: Run 'python3 hailo_yolov11_web.py' on the Pi")
print("3. Objects365: Requires model conversion (instructions above)"